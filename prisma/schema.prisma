// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String @db.VarChar(30)
  email String @unique 
  password String
  avatar String?
  product Product[]
  category Category[]
  insight Insight[]
  testimonial Testimonial[]
}

model Product {
  id String @id @default(uuid())
  name String
  desc String? @db.Text
  userId String
  user User @relation(fields: [userId], references: [id])
}

model Category {
  id String @id @default(uuid())
  name String @db.VarChar(30)
  userId String
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  insight Insight[]
}

model Insight {
  id String @id @default(uuid())
  name String @db.VarChar(200)
  userId String
  categoryId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  images InsightImage[]
  user User @relation(fields: [userId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
}

model InsightImage {
  id String @unique @default(uuid())
  insightId String
  insight Insight @relation(fields: [insightId], references: [id], onDelete: Cascade)
  url String
  createdAt DateTime @default(now())
  updatedtAt DateTime @updatedAt
}

model Testimonial {
  id String @id @default(uuid())
  customer String @db.VarChar(30)
  position String @db.VarChar(50)
  comment String @db.VarChar(200)
  userId String
  user User @relation(fields: [userId], references: [id])
}
